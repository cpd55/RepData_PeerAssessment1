set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
y <- 0.5 + 2 * x
plot(x, y)
y <- 0.5 + 2 * x + e
plot(x, y)
y <- 0.5 + 2 * x + e
plot(x, y)
set.seed(10)
x <- rbinom(100, 10, 0.5)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
x <- rbinom(100, 10, 1)
set.seed(10)
x <- rbinom(100, 101, 1)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
set.seed(10)
x <- rbinom(100, 50, 1)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
x <- rbinom(10, 50, 1)
set.seed(10)
x <- rbinom(10, 50, 1)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
set.seed(10)
x <- rbinom(100, 20, 1)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
set.seed(10)
x <- rbinom(100, 20, 0.1)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
set.seed(10)
x <- rbinom(100, 50, 0.1)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
set.seed(10)
x <- rbinom(100, 50, 0.5)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
system.time()
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof()
system.time()
system.time(lm(y~6+5))
y <- 0.5 + 2 * x + e
system.time(lm(y~0.5 + 2 * x + e))
swirl()
library(swirl)
swirl()
swirl()
install_from_swirl("R Programming")
swirl()
install.packages(knitr)
install.packages("knitr)
install.packages("knitr")
install.packages('knitr')
activities <- read.csv('activity.csv')
summary(activities)
setwd('c:/GIT/RepData_PeerAssessment1/')
activities <- read.csv('activity.csv')
head(activities)
summary(activities)
library(plyr)
sum_em <- ddply(activities, c("date"), summarise, number.of.steps=sum(steps))
sum_em
sum_steps <- ddply(activities, c("date"), summarise, number.of.steps=sum(steps))
hist(sum_steps)
hist(sum_steps$date )
hist(sum_steps$number.of.steps )
hist(sum_steps$number.of.steps,xlab='Total number of steps taken',breaks=10 )
hist(sum_steps$number.of.steps,xlab='Total number of steps taken',breaks=20 )
hist(sum_steps$number.of.steps,xlab='Total number of steps taken',breaks=200 )
hist(sum_steps$number.of.steps,xlab='Total number of steps taken',breaks=15)
hist(sum_steps$number.of.steps,main = "Histogram of total number of steps taken",xlab='Total number of steps taken',breaks=15)
sum_steps <- ddply(activities, c("date"), summarise, number.of.steps=sum(steps), daily.mean=mean(steps), daily.median=median(steps))
View(sum_steps)
sum_steps <- ddply(activities, c("date"), summarise, number.of.steps=sum(steps), daily.mean=mean(steps), daily.median=median(steps, na.rm = FALSE))
View(sum_steps)
View(activities)
library(xtable)
install.packages('xtable')
library(xtable)
xt <- xtable(sum_steps)
print(xt, type("html")
)
print(xt, type="html")
plot(activities, type="l")
plot(x=activities$steps,type="l")
plot(x=activities$interval,type="l" )
plot(x=activities$steps,y=sum_steps$daily.mean,type="l" )
plot(x=sum_steps$number.of.steps,y=sum_steps$daily.mean,type="l" )
activities_avg=ddply(activities, avg.steps=mean(steps))
activities_avg=ddply(activities, summarise, avg.steps=mean(steps))
activities_avg=ddply(activities, fun=summarise, avg.steps=mean(steps))
=
activities_avg=ddply(activities, fun=summarise, avg.steps=mean(steps))
activities_avg=ddply(activities, c("date"),fun=summarise, avg.steps=mean(steps))
plot(x=activities_avg$steps,y=activities_avg,type="l" )
plot(x=activities_avg$steps,y=activities_avg$date,type="l" )
plot(x=activities_avg$steps,y=activities_avg$avg.steps,type="l" )
activities_avg=mean(activities$steps)
activities_avg=mean(activities$steps, na.rm=TRUE)
plot(x=activities$steps,type="l",xlab="time intervalls",
+ ylab="number of steps", main="Steps per time intervalls" )
plot(x=activities$steps,type="l",xlab="time intervalls", ylab="number of steps", main="Steps per time intervalls" )
abline(v=0,col="red")
abline(v=activities_avg,col="red")
abline(h=activities_avg,col="red")
sum_steps <- ddply(activities, c("date"), summarise, interval, daily.max=max(steps))
daily_max_steps <- ddply(activities, c("date"), summarise, interval, daily.max=max(steps))
daily_max_steps <- ddply(activities, c("date", interval), summarise, interval, daily.max=max(steps))
daily_max_steps <- ddply(activities, c("date", "interval), summarise, interval, daily.max=max(steps))
daily_max_steps <- ddply(activities, c("date", "interval"), summarise, interval, daily.max=max(steps))
daily_max_steps <- ddply(activities, c("date", "interval"), summarise, daily.max=max(steps))
View(daily_max_steps)
daily_max_steps <- ddply(activities, c("date"), summarise, daily.max=max(steps))
View(daily_max_steps)
daily_max_steps <- ddply(activities, c("date"), summarise, daily.max=max(steps))
daily_max_intervals <- merge(x=daily_max_steps, y=activities)
daily_max_steps <- ddply(activities, c("date"), summarise, daily.max=max(steps))
daily_max_intervals <- merge(x=daily_max_steps, y=activities,by.x=c(date,daily.max),by.y=c(date,steps))
daily_max_intervals <- merge(x=daily_max_steps, y=activities,by.x=c("date","daily.max"),by.y=c("date","steps"))
View(daily_max_intervals)
daily_max_intervals <- merge(x=daily_max_steps, y=activities,by.x=c("date","daily.max"),by.y=c("date","steps"),all=FALSE)
daily_max_steps <- ddply(activities, c("date"), summarise, daily.max=max(steps),.drop=FALSE)
daily_max_steps <- ddply(activities, c("date"), summarise, daily.max=max(steps),.drop=FALSE)
daily_max_intervals <- merge(x=daily_max_steps, y=activities,by.x=c("date","daily.max"),by.y=c("date","steps"),all=TRUE)
daily_max_intervals <- merge(x=daily_max_steps, y=activities,by.x=c("date","daily.max"),by.y=c("date","steps"),all=FALSE)
daily_max_intervals <- merge(x=daily_max_steps[!is.na(daily_max_steps$steps),], y=activities,by.x=c("date","daily.max"),by.y=c("date","steps"),all=FALSE)
daily_max_steps[!is.na(daily_max_steps$steps),]
daily_max_steps[!is.na(daily_max_steps$daily.max),]
daily_max_intervals <- merge(x=daily_max_steps[!is.na(daily_max_steps$daily.max),], y=activities[!is.na(activities$steps),],by.x=c("date","daily.max"),by.y=c("date","steps"),all=FALSE)
View(daily_max_intervals)
hist(daily_max_intervals)
hist(daily_max_intervals$interval,20)
hist(daily_max_intervals$interval,30)
hist(daily_max_intervals$interval,main = "Histogram of the most active intervals",xlab='Interval no.',breaks=15)
View(activities)
activities <- read.csv('activity.csv')
View(activities)
View(activities)
setwd('c:/GIT/RepData_PeerAssessment1/')
activities <- read.csv('activity.csv')
View(activities)
